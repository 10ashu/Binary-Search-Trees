#include<bits/stdc++.h>
using namespace std;
class Node{
public:
      int data;
      Node* left;
      Node* right;
      Node(int data)
      {
        this->data=data;
        this->left=NULL;
        this->right=NULL;
      }

};
 void levelordertraversal(Node* root)
 {
    queue<Node*> q;
    q.push(root);
    q.push(NULL);
    while(!q.empty())
    {
        Node* temp=q.front();
        q.pop();
        if(temp==NULL)
        {
            cout<<endl;
            if(!q.empty())
            q.push(NULL);
        }
        else{
            cout<<temp->data<<" ";
        if(temp->left)
        {
              q.push(temp->left);
        }
        if(temp->right)
        {
            q.push(temp->right);
        }
        }
    }
 }
Node* insertintobst(Node* root,int data)
 {
      if(root==NULL)
      {
        //pehli node
        Node* root =new Node(data);
        return root;
      }
      else if(root->data>data)
      {
       root->left=insertintobst(root->left,data);
      }
      else if(root->data<data)
      {
        root->right= insertintobst(root->right,data);
      }
      return root;
 }
 void buildbst(Node* &root)
 {
    cout<<"Enter the data ";
    int data;
    cin>>data;
    while (data!=-1)
    {
       root=insertintobst(root,data);
        cin>>data;
    }
    
 }
int main()
{
    Node* root=NULL;
    buildbst(root);
    levelordertraversal(root);
    return 0;
    }
